name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the test dependencies
        run: |
          echo "Upgrading pip ...."
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt

      - name: Check linter
        run: |
          echo "Checking black formatting..."
          python3 -m black --check .
          echo "Checking isort formatting..."
          python3 -m isort --check .
          echo "Checking flake8 formatting..."
          python3 -m flake8 .

      - name: Run the tests
        run: |
          pytest -s -v

      # - name: Build containers

      #   run: |
      #     sudo sysctl -w vm.max_map_count=262144
      #     sudo docker compose up -d

      #     apt install jq
      #     until docker inspect --format "{{json .State.Health }}" caddy | \
      #                             jq '.Status' | grep 'healthy'; do

      #         >&2 echo "Elk stack is unhealthy - waiting..."

      #         sleep 1
      #         done

      #         >&2 echo "Elk stack is healthy - proceeding..."
